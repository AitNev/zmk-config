#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define MED  1
#define NAV  2
#define MOU  3
#define SYM  4
#define NUM  5
#define FUN  6

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

/ {

  // conditional_layers {
  //   compatible = "zmk,conditional-layers";
  //   tri_layer {
  //       if-layers = <4 5>;
  //       then-layer = <6>;
  //   };
  // };

  behaviors {
	  hm: homerow_mods {
	    compatible = "zmk,behavior-hold-tap";
	    label = "homerow mods";
	    #binding-cells = <2>;
	    tapping_term_ms = <220>;
	    flavor = "balanced";
	    bindings = <&kp>, <&kp>;
	  };

	  // mx: layer_tap_osl {
		// 	compatible = "zmk,behavior-hold-tap";
		// 	label = "LAYER_TAP_OSL";
		// 	#binding-cells = <2>;
		// 	flavor = "hold-preferred";
		// 	tapping_term_ms = <200>;
		// 	bindings = <&mo>, <&sl>;
		// };
	};

  macros {

  };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  F   |  P   |  B   |                                          |  J   |  L    |  U    |  Y   |   '   | bksp |
// | TAB/FN|  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |ent/fn|
// | SHIFT |  X  |  C  |  D   |  V   |  Z   | ---     |  ---    |  |   ---   |  ---    |  K   |  H    |  ,    |  .   |   /   |shft/;|
//                     | ENC  |Opt/En| Cmd  |  Nav    |   del   |  |   bksp  |  num    | spc  | Ctl   | ENC2  |
// encoder : volume up/down //// ctrl left/ ctrl right
			bindings = <
	&kp ESC     &kp Q       &kp W &kp F &kp P &kp B                                            &kp Y &kp U  &kp I     &kp O   &kp P         &kp BSPC
	&kp TAB     &hm LSHFT A &kp R &kp S &kp T &kp G                                            &kp H &kp J  &kp K     &kp L   &hm RSHFT SQT &kp RET
	&kp LSHFT   &kp X       &kp C &kp D &kp V &kp Z &none   &none            &kp RCTRL &none  &kp N &kp M  &kp COMMA &kp DOT &kp FSLH       &mt RSHFT SEMI
	              &tog NAV &mt LALT RET  &kp LGUI &mo MED &kp DEL            &kp BKSP &mo NUM &kp SPC &kp LCTRL &none
			>;

			sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		media_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | ---   | --- | --- | ---  | ---  | ---  |                                       | ---  |  ---  |  ---  |  --- | ---  | ---  |
// | ---   |Super| Alt | Ctrl | Shift| ---  |                                       | ---  |  PREV |  V-   |  V+  | NEXT | ---  |
// | ---   | --- | --- | ---  | ---  | ---  |  ---   |  ---    |  |   ---   |  ---  |BT_CLR|  BT_0 |  BT_1 |  BT_2| BT_3 | ---  |
//                     | ---  | ---  | ---  |  ---   |  ---    |  |  STOP   | PAUSE | MUTE | ---   | ---   |
// encoder : volume up/down //// brightness up/down

			bindings = <
	&none &none    &none    &none     &none     &none                                                       &none      &none        &none        &none        &none        &none
	&none &kp LWIN &kp LALT &kp LCTRL &kp LSHFT &none                                                       &none      &kp C_PREV   &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT   &none
	&none &none    &none    &none     &none     &none &none &none &none         &none      &none            &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none
	                                  &none     &none &none &none &none         &kp C_STOP &kp C_PLAY_PAUSE &kp C_MUTE &none &none
			>;

			sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
		
		function_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | none  |  F2 | mute| V+   | stp  |   @  |                                       | F12  |  F7   |  F8   |  F9  | Print| none |
// | none  | caps| Prev| V-   | Next |   @p |                                       | F11  |  F4   |  F5   |  F6  | Ins  | none |
// | none  | /Ble| Ble0| Ble1 | Ble2 | Ble3 |  Ble4  |  ---    |  |   ---   |  ---  | F10  |  F1   |  F2   |  F3  | ---  | none |
//                     | ---  | ---  | ---  |  ---   |  ---    |  |   ---   |  ---  | ---  | ---   | ---   |
// encoder : volume up/down //// brightness up/down

			bindings = <
	&trans &kp F2     &kp C_MUTE   &kp C_VOL_UP &kp C_STOP   &none                                                &kp F12 &kp F7 &kp F8 &kp F9 &kp PRTSC &trans
	&trans &kp CAPS   &kp C_PREV   &kp C_VOL_DN &kp C_NEXT   &none                                                &kp F11 &kp F4 &kp F5 &kp F6 &kp INS  &trans
	&trans &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &out OUT_TOG  &none  &none &kp F10 &kp F1 &kp F2 &kp F3 &trans   &trans
	                         &trans        &trans        &trans           &trans       &trans        &trans &trans &trans &trans &trans
			>;

			sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_cp C_BRI_DN C_BRI_UP>;
		};

		num_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | `     |  !  |  +  |  [   |  ]   |  =   |                                          |  %   |  7    |  8    |  9   |   *   | /    |
// | #     |  @  |  _  |  (   |  )   |  -   |                                          |  $   |  4    |  5    |  6   |   +   | ---  |
// | ~     |  \  |  &  |  {   |  }   |  |   |   ---   |  ---    |  |   ---   |  ---    |  ^   |  1    |  2    |  3   |   -   | ---  |
//                     | ENC  | ---  | ---  |   ---   |  ---    |  |   ---   |  ---    |  0   |  .    | ---   |
// encoder :  identation left right || hard to reach

			bindings = <
	&kp GRAVE &kp EXCL &kp PLUS  &kp LBKT &kp RBKT &kp EQUAL                             &kp CARET &kp N7 &kp N8 &kp N9 &kp KP_MULTIPLY &kp KP_DIVIDE
	&kp HASH  &kp AT   &kp UNDER &kp LPAR &kp RPAR &kp MINUS                             &kp PRCNT &kp N4 &kp N5 &kp N6 &kp KP_PLUS &none
	&kp TILDE &kp BSLH &kp AMPS  &kp LBRC &kp RBRC &kp PIPE &trans &trans  &trans &trans &kp DLLR  &kp N1 &kp N2 &kp N3 &kp KP_MINUS &trans
	                       &trans  &trans   &trans          &trans &trans  &trans &trans    &kp N0  &kp DOT    &trans
			>;

			sensor-bindings = <&inc_dec_kp IDENT_LEFT IDENT_RIGHT>;
		};

		nav_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | ---  | Tab-| Tab+| win+ | win- | ---  |                                          | Pgup | Home |  Up   | End  | ScrUp | ---  |
// | ---  | Ctrl| Shft| alt  | cmd  | ---  |                                          | Pgdw | Left |  Down | Right| ScrDn | ---  |
// | ---  | --- |---  | nextw|subl1 | ---  |   ---   |  ---    |  |   ---   |  ---    |      | desk1| desk2 | desk3| desk4 |---   |
//                    | ENC  | ---  | ---  |   ---   |  ---    |  |   ---   |  ---    | ---  | ---  | ---   |
// encoder :  hard to reach || move text left right

			bindings = <
	&kp SAMAPP &kp PTAB &kp NTAB &kp PWIN &kp NWIN  &trans                                &kp PG_UP &kp MHOME &kp UP   &kp MEND   &kp K_SCROLL_UP &trans
	&trans     &kp LCTRL &kp LSHFT &kp LALT &kp LGUI  &trans                                &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp K_SCROLL_DOWN &trans
	&trans     &trans   &trans  &kp NXTWO &kp SUBL1 &trans &trans &trans  &trans &trans  &trans   &kp DESK1 &kp DESK2 &kp DESK3 &kp DESK4 &trans
	                       &trans  &trans   &trans        &trans &trans  &trans &trans    &trans    &none     &trans
			>;

			sensor-bindings = <&inc_dec_cp C_VOL_DN C_VOL_UP &inc_dec_kp MOVE_TEXT_LEFT MOVE_TEXT_RIGHT>;
		};
	};
};
